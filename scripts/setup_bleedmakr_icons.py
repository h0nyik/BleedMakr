#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Setup script for BleedMakr icons from BleedMakr.png
Uses ImageMagick to create all required icon formats
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

# ImageMagick path
IMAGEMAGICK_PATH = r"C:\Program Files\ImageMagick-7.1.2-Q16-HDRI\magick.exe"

def check_imagemagick():
    """Kontroluje dostupnost ImageMagick"""
    print("üîç Kontrola ImageMagick...")
    
    if os.path.exists(IMAGEMAGICK_PATH):
        print(f"   ‚úÖ ImageMagick nalezen: {IMAGEMAGICK_PATH}")
        return True
    else:
        print(f"   ‚ùå ImageMagick nenalezen: {IMAGEMAGICK_PATH}")
        return False

def check_source_icon():
    """Kontroluje dostupnost zdrojov√© ikony"""
    print("\nüîç Kontrola zdrojov√© ikony...")
    
    source_icon = "BleedMakr.png"
    if os.path.exists(source_icon):
        size = os.path.getsize(source_icon)
        print(f"   ‚úÖ {source_icon} nalezen ({size:,} bytes)")
        return True
    else:
        print(f"   ‚ùå {source_icon} nenalezen")
        return False

def create_icon_sizes():
    """Vytvo≈ô√≠ r≈Øzn√© velikosti ikon z BleedMakr.png"""
    print("\nüìè Vytv√°≈ôen√≠ r≈Øzn√Ωch velikost√≠ ikon...")
    
    # Vytvo≈ôen√≠ slo≈æek
    Path("assets/icons/windows").mkdir(parents=True, exist_ok=True)
    Path("assets/icons/macos").mkdir(parents=True, exist_ok=True)
    Path("assets/icons/linux").mkdir(parents=True, exist_ok=True)
    
    # Velikosti pro r≈Øzn√© platformy
    sizes = {
        'windows': [16, 32, 48, 256],
        'macos': [16, 32, 128, 256, 512],
        'linux': [16, 32, 48, 64, 128, 256]
    }
    
    for platform, size_list in sizes.items():
        print(f"   üì± {platform.upper()}:")
        for size in size_list:
            output_file = f"assets/icons/{platform}/icon_{size}.png"
            
            # ImageMagick p≈ô√≠kaz pro zmƒõnu velikosti
            cmd = [
                IMAGEMAGICK_PATH,
                "convert",
                "BleedMakr.png",
                "-resize", f"{size}x{size}",
                "-background", "transparent",
                "-gravity", "center",
                "-extent", f"{size}x{size}",
                output_file
            ]
            
            try:
                result = subprocess.run(cmd, capture_output=True, text=True)
                if result.returncode == 0:
                    print(f"      ‚úÖ {size}x{size} ‚Üí {output_file}")
                else:
                    print(f"      ‚ùå Chyba p≈ôi vytv√°≈ôen√≠ {size}x{size}")
            except Exception as e:
                print(f"      ‚ùå Chyba: {e}")

def create_ico_file():
    """Vytvo≈ô√≠ ICO soubor pro Windows"""
    print("\nü™ü Vytv√°≈ôen√≠ ICO souboru pro Windows...")
    
    try:
        # Seznam PNG soubor≈Ø pro Windows
        png_files = list(Path("assets/icons/windows").glob("icon_*.png"))
        png_files.sort(key=lambda x: int(x.stem.split('_')[1]))
        
        if png_files:
            # ImageMagick p≈ô√≠kaz pro vytvo≈ôen√≠ ICO
            cmd = [IMAGEMAGICK_PATH, "convert"]
            for png_file in png_files:
                cmd.append(str(png_file))
            cmd.extend(["icon.ico"])
            
            result = subprocess.run(cmd, capture_output=True, text=True)
            if result.returncode == 0:
                print("   ‚úÖ icon.ico vytvo≈ôen")
            else:
                print(f"   ‚ùå Chyba p≈ôi vytv√°≈ôen√≠ ICO: {result.stderr}")
        else:
            print("   ‚ùå Nenalezeny PNG soubory pro Windows")
    
    except Exception as e:
        print(f"   ‚ùå Chyba p≈ôi vytv√°≈ôen√≠ ICO: {e}")

def create_icns_file():
    """Vytvo≈ô√≠ ICNS soubor pro macOS"""
    print("\nüçé Vytv√°≈ôen√≠ ICNS souboru pro macOS...")
    
    try:
        # Seznam PNG soubor≈Ø pro macOS
        png_files = list(Path("assets/icons/macos").glob("icon_*.png"))
        png_files.sort(key=lambda x: int(x.stem.split('_')[1]))
        
        if png_files:
            # ImageMagick p≈ô√≠kaz pro vytvo≈ôen√≠ ICNS
            cmd = [IMAGEMAGICK_PATH, "convert"]
            for png_file in png_files:
                cmd.append(str(png_file))
            cmd.extend(["icon.icns"])
            
            result = subprocess.run(cmd, capture_output=True, text=True)
            if result.returncode == 0:
                print("   ‚úÖ icon.icns vytvo≈ôen")
            else:
                print(f"   ‚ùå Chyba p≈ôi vytv√°≈ôen√≠ ICNS: {result.stderr}")
        else:
            print("   ‚ùå Nenalezeny PNG soubory pro macOS")
    
    except Exception as e:
        print(f"   ‚ùå Chyba p≈ôi vytv√°≈ôen√≠ ICNS: {e}")

def copy_linux_icon():
    """Zkop√≠ruje nejvƒõt≈°√≠ PNG ikonu pro Linux"""
    print("\nüêß Kop√≠rov√°n√≠ Linux ikony...")
    
    try:
        png_files = list(Path("assets/icons/linux").glob("icon_*.png"))
        if png_files:
            # Naj√≠t nejvƒõt≈°√≠ ikonu
            largest_png = max(png_files, key=lambda x: int(x.stem.split('_')[1]))
            shutil.copy2(largest_png, "icon.png")
            print(f"   ‚úÖ Zkop√≠rov√°no: {largest_png} ‚Üí icon.png")
        else:
            print("   ‚ùå Nenalezeny PNG soubory pro Linux")
    
    except Exception as e:
        print(f"   ‚ùå Chyba p≈ôi kop√≠rov√°n√≠ Linux ikony: {e}")

def verify_icons():
    """Ovƒõ≈ô√≠, ≈æe v≈°echny ikony byly vytvo≈ôeny"""
    print("\nüîç Ovƒõ≈ôen√≠ vytvo≈ôen√Ωch ikon...")
    
    required_files = [
        "icon.ico",
        "icon.icns", 
        "icon.png"
    ]
    
    for file in required_files:
        if os.path.exists(file):
            size = os.path.getsize(file)
            print(f"   ‚úÖ {file} ({size:,} bytes)")
        else:
            print(f"   ‚ùå {file} - CHYB√ç")

def main():
    """Hlavn√≠ funkce"""
    print("üé® BleedMakr - Nastaven√≠ ikon")
    print("=" * 50)
    
    # Kontrola ImageMagick
    if not check_imagemagick():
        print("\n‚ùå ImageMagick nen√≠ dostupn√Ω!")
        print("   Zkontrolujte cestu: C:\\Program Files\\ImageMagick-7.1.2-Q16-HDRI\\magick.exe")
        return False
    
    # Kontrola zdrojov√© ikony
    if not check_source_icon():
        print("\n‚ùå Zdrojov√° ikona BleedMakr.png nen√≠ dostupn√°!")
        print("   Um√≠stƒõte BleedMakr.png do root slo≈æky projektu")
        return False
    
    # Vytvo≈ôen√≠ r≈Øzn√Ωch velikost√≠
    create_icon_sizes()
    
    # Vytvo≈ôen√≠ platformov√Ωch form√°t≈Ø
    create_ico_file()
    create_icns_file()
    copy_linux_icon()
    
    # Ovƒõ≈ôen√≠
    verify_icons()
    
    print("\n" + "=" * 50)
    print("‚úÖ Nastaven√≠ ikon dokonƒçeno!")
    print("\nüìã Vytvo≈ôen√© soubory:")
    print("   - Windows: icon.ico")
    print("   - macOS: icon.icns")
    print("   - Linux: icon.png")
    print("   - Zdroje: assets/icons/")
    
    print("\nüöÄ Nyn√≠ m≈Ø≈æete spustit build s nov√Ωmi ikonami:")
    print("   python scripts/build_exe.py")
    
    return True

if __name__ == "__main__":
    main() 