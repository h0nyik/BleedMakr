name: Build Release

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Windows EXE
      run: |
        cd scripts
        python build_exe.py
    
    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: BleedMakr-Windows-x64-${{ matrix.python-version }}
        path: scripts/dist/
        retention-days: 1

  build-macos:
    runs-on: macos-14
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build macOS App
      run: |
        cd scripts
        python build_exe.py
    
    - name: Upload macOS Artifact
      uses: actions/upload-artifact@v4
      with:
        name: BleedMakr-macOS-x64-${{ matrix.python-version }}
        path: scripts/dist/
        retention-days: 1

  build-linux:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-glx libglib2.0-0
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Linux Binary
      run: |
        cd scripts
        python build_exe.py
    
    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v4
      with:
        name: BleedMakr-Linux-x64-${{ matrix.python-version }}
        path: scripts/dist/
        retention-days: 1

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Get version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: BleedMakr ${{ steps.version.outputs.VERSION }}
        body: |
          ## Universal Release
          
          ### Windows
          - BleedMakr.exe (Windows x64)
          
          ### macOS
          - BleedMakr (macOS x64/ARM64)
          
          ### Linux
          - BleedMakr (Linux x64)
          
          ### Installation
          1. Download appropriate version for your OS
          2. Extract ZIP archive
          3. Run executable
        draft: false
        prerelease: false
        files: |
          ./BleedMakr-Windows-x64-3.12/BleedMakr.exe
          ./BleedMakr-macOS-x64-3.12/BleedMakr
          ./BleedMakr-Linux-x64-3.12/BleedMakr
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-prerelease:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Get commit SHA
      id: commit
      run: echo "SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
    
    - name: Create Prerelease
      id: create_prerelease
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v0.0.1-prerelease-${{ steps.commit.outputs.SHA }}
        name: BleedMakr Prerelease ${{ steps.commit.outputs.SHA }}
        body: |
          ## Prerelease Build
          
          Commit: ${{ github.sha }}
          Branch: ${{ github.ref_name }}
          
          ### Windows
          - BleedMakr.exe (Windows x64)
          
          ### macOS
          - BleedMakr (macOS x64/ARM64)
          
          ### Linux
          - BleedMakr (Linux x64)
          
          ### Installation
          1. Download appropriate version for your OS
          2. Extract ZIP archive
          3. Run executable
        draft: false
        prerelease: true
        files: |
          ./BleedMakr-Windows-x64-3.12/BleedMakr.exe
          ./BleedMakr-macOS-x64-3.12/BleedMakr
          ./BleedMakr-Linux-x64-3.12/BleedMakr
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 