name: Auto Versioning

on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      force_version:
        description: 'Force specific version (e.g. 1.0.0)'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  version:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Semantic Version
        id: version
        uses: paulhatch/semantic-version@v5.4.0
        with:
          major_pattern: "(MAJOR|BREAKING CHANGE)"
          minor_pattern: "(MINOR|feat)"
          bump_each_commit_patch_pattern: "(PATCH|fix|docs|style|refactor|test|chore)"
          version_format: "${major}.${minor}.${patch}"
          bump_each_commit: true
          tag_prefix: "v"
      
      - name: Check if major version requires approval
        id: major_check
        run: |
          $version = "${{ steps.version.outputs.version }}"
          $major = $version.Split('.')[0]
          if ($major -gt 0) {
            echo "MAJOR_VERSION=true" >> $GITHUB_OUTPUT
            echo "VERSION=$version" >> $GITHUB_OUTPUT
          } else {
            echo "MAJOR_VERSION=false" >> $GITHUB_OUTPUT
            echo "VERSION=$version" >> $GITHUB_OUTPUT
          }
      
      - name: Force version if provided
        if: github.event.inputs.force_version != ''
        run: |
          echo "VERSION=${{ github.event.inputs.force_version }}" >> $GITHUB_OUTPUT
          echo "MAJOR_VERSION=true" >> $GITHUB_OUTPUT
      
      - name: Update version.txt
        run: echo "${{ steps.version.outputs.VERSION }}" > version.txt
      
      - name: Commit version update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add version.txt
          git commit -m "chore: update version to ${{ steps.version.outputs.VERSION }}" || exit 0
          git push
      
      - name: Create Tag
        run: git tag v${{ steps.version.outputs.VERSION }}
      
      - name: Push Tags
        run: git push origin --tags
      
      - name: Comment on major version
        if: steps.major_check.outputs.MAJOR_VERSION == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `⚠️ **Major version detected: ${{ steps.version.outputs.VERSION }}**
              
              This version requires manual approval before release.
              
              To continue:
              1. Review code changes
              2. Verify compatibility
              3. Run "Create Official Release" workflow manually
              
              Commit: ${{ github.sha }}`
            }) 