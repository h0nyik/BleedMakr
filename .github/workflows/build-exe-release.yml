name: Build Universal Release

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Windows EXE
      run: |
        cd scripts
        python build_exe.py
    
    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v3
      with:
        name: BleedMakr-Windows-x64
        path: scripts/dist/
        retention-days: 1

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build macOS App
      run: |
        cd scripts
        python build_exe.py
    
    - name: Upload macOS Artifact
      uses: actions/upload-artifact@v3
      with:
        name: BleedMakr-macOS-x64
        path: scripts/dist/
        retention-days: 1

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-glx libglib2.0-0
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Linux Binary
      run: |
        cd scripts
        python build_exe.py
    
    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v3
      with:
        name: BleedMakr-Linux-x64
        path: scripts/dist/
        retention-days: 1

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Get version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        release_name: BleedMakr ${{ steps.version.outputs.VERSION }}
        body: |
          ## Universal Release
          
          ### Windows
          - BleedMakr.exe (Windows x64)
          
          ### macOS
          - BleedMakr (macOS x64/ARM64)
          
          ### Linux
          - BleedMakr (Linux x64)
          
          ### Installation
          1. Download appropriate version for your OS
          2. Extract ZIP archive
          3. Run executable
        draft: false
        prerelease: false
    
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./BleedMakr-Windows-x64/BleedMakr.exe
        asset_name: BleedMakr-Windows-x64.exe
        asset_content_type: application/octet-stream
    
    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./BleedMakr-macOS-x64/BleedMakr
        asset_name: BleedMakr-macOS-x64
        asset_content_type: application/octet-stream
    
    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./BleedMakr-Linux-x64/BleedMakr
        asset_name: BleedMakr-Linux-x64
        asset_content_type: application/octet-stream 