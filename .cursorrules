# Semantic Versioning Rules pro BleedMakr

## Verzování podle semver.org

Před každým commit a push na GitHub MUSÍŠ zkontrolovat a případně upravit verzi podle těchto pravidel:

## GitHub Actions - Automatický CI/CD Pipeline

### Aktuální workflow soubory:
- **`.github/workflows/versioning.yml`** - Automatické verzování
- **`.github/workflows/build-release.yml`** - Auto Build (Prerelease)
- **`.github/workflows/create-release.yml`** - Create Official Release

### Jak funguje automatický systém:

**1. Auto Versioning (versioning.yml):**
- Spouští se na každý push na master
- Automaticky zvyšuje verzi podle commit messages:
  - `feat:` → MINOR verze (0.1.0, 0.2.0, ...)
  - `fix:` → PATCH verze (0.0.1, 0.0.2, ...)
  - `BREAKING CHANGE` → MAJOR verze (1.0.0, 2.0.0, ...)
- Kontroluje major verze a upozorní na nutnost schválení
- Aktualizuje version.txt a vytváří Git tagy

**2. Auto Build (build-release.yml):**
- Spouští se na každý push na master
- Vytváří prerelease s označením `v{verze}-prerelease-{commit}`
- Automaticky generuje changelog z commitů
- Build pro všechny platformy (Windows, macOS, Linux)

**3. Create Official Release (create-release.yml):**
- Pouze manuální spuštění přes workflow_dispatch
- Vyžaduje zadání verze (např. 1.0.0)
- Vytváří oficiální release s detailním changelogem
- Obsahuje všechny platformy a podrobné informace

### Pravidla pro GitHub Actions:
- **NEUPRAVUJ** workflow soubory bez konzultace
- **Zachovej** automatické verzování a buildy
- **Major verze** (1.0.0+) vyžadují manuální schválení
- **Changelog** se generuje automaticky z commitů
- **Prerelease** se tvoří na každý push na master
- **Oficiální release** pouze manuálně

### Commit message formát pro automatické verzování:
```
feat: přidána podpora pro nový formát souborů
fix: oprava chyby při zpracování PDF
docs: aktualizace README
BREAKING CHANGE: změněno API pro zpracování
```

## Struktura a přehlednost projektu

### Pravidla pro organizaci souborů a složek:
- **src/** - Hlavní zdrojový kód aplikace
- **tests/** - Testovací soubory (odpovídají struktuře src/)
- **docs/** - Dokumentace a README soubory
- **scripts/** - Build skripty a utility
- **logs/** - Log soubory (ignorovány v git)
- **.github/** - GitHub Actions a konfigurace

### Pravidla pro názvy souborů:
- Používej snake_case pro Python soubory (např. `spadavka_generator.py`)
- Používej kebab-case pro konfigurační soubory (např. `build-exe-release.yml`)
- Používej PascalCase pro třídy v kódu
- Používej camelCase pro proměnné a funkce

### Pravidla pro organizaci kódu:
- Každá třída v samostatném souboru nebo logicky seskupené
- Importy na začátku souboru, seřazené podle standardu
- Komentáře v češtině pro business logiku
- Docstringy pro všechny veřejné funkce a třídy
- Maximální délka řádku 120 znaků

### Formát verze: MAJOR.MINOR.PATCH
- **MAJOR** - Nezpětně kompatibilní změny API
- **MINOR** - Zpětně kompatibilní nové funkce  
- **PATCH** - Zpětně kompatibilní opravy chyb

### Pravidla pro zvýšení verze:

**MAJOR (X.0.0) - zvýšit když:**
- Změny v API, které nejsou zpětně kompatibilní
- Přidání nových povinných parametrů
- Odstranění funkcí nebo metod
- Změny v datových strukturách
- Přepracování architektury aplikace

**MINOR (0.X.0) - zvýšit když:**
- Přidání nových funkcí (zpětně kompatibilní)
- Nové volitelné parametry
- Vylepšení existujících funkcí
- Nové formáty podporovaných souborů
- Přidání nových GUI prvků

**PATCH (0.0.X) - zvýšit když:**
- Opravy chyb
- Vylepšení výkonu
- Opravy v dokumentaci
- Kosmetické změny v GUI
- Opravy v testech

### Soubory k úpravě při změně verze:

1. **version.txt** - hlavní soubor s verzí (automaticky aktualizován)
2. **README.md** - badge s verzí
3. **spadavka_generator.py** - verze v aplikaci
4. **Git tag** - vytvořen automaticky

### Commit message formát:
```
feat: přidána podpora pro nový formát souborů
fix: oprava chyby při zpracování PDF
docs: aktualizace README
BREAKING CHANGE: změněno API pro zpracování
```

### Pravidla pro commit messages:
- Používej konvenční commit formát (feat:, fix:, docs:, style:, refactor:, test:, chore:)
- První řádek max 50 znaků
- Popis změny v češtině
- Pokud je potřeba detailnější popis, použij prázdný řádek a pokračuj
- **NEPIŠ** typ změny v závorce - automatické verzování to určí samo

### Automatické akce při push:
1. Zkontroluj změny v kódu
2. Urči typ změny (MAJOR/MINOR/PATCH)
3. **Commit s popisným message** podle konvenčního formátu
4. Push na GitHub
5. **Automaticky se spustí:**
   - Auto Versioning (zvýší verzi podle commit message)
   - Auto Build (vytvoří prerelease s changelogem)
6. **Pro oficiální release** spusť manuálně "Create Official Release"

### Soubor version.txt:
Obsahuje aktuální verzi, automaticky aktualizován:
```
0.0.1
```

### Příklad workflow:
1. Udělal jsem změny → analyzuj typ
2. Typ: oprava chyby → commit: "fix: oprava chyby při zpracování EPS souborů"
3. Push na GitHub
4. Automaticky: verze 0.0.1 → 0.0.2, vytvoří prerelease
5. Pro oficiální release: spusť "Create Official Release" manuálně

### Důležité poznámky:
- **Automatické verzování je AKTIVNÍ** - verze se zvyšuje podle commit messages
- Začínáme s verzí 0.0.1 protože jsme v úplně počáteční fázi vývoje
- Verze 0.1.0 bude až když bude základní API definované
- Verze 1.0.0 bude až když bude API stabilní a připravené pro produkci
- Každá změna MUSÍ být commitována s popisným message
- **Major verze vyžadují manuální schválení**
- Pre-release verze se tvoří automaticky na každý push
- Oficiální release pouze manuálně

### Pravidla pro refaktoring a údržbu:
- Pravidelně refaktoruj kód pro lepší čitelnost
- Odstraňuj duplicitní kód
- Dodržuj princip DRY (Don't Repeat Yourself)
- Používej meaningful názvy proměnných a funkcí
- Komentuj složitou business logiku
- Udržuj testy aktuální s kódem

### Kontrolní seznam před každým push:
- [ ] Určil jsem správný typ změny
- [ ] Commit message je podle konvenčního formátu
- [ ] Kód je přehledně strukturovaný
- [ ] Názvy souborů a složek odpovídají konvencím
- [ ] Testy procházejí (pokud existují)
- [ ] Dokumentace je aktualizována (pokud je potřeba)
- [ ] **GitHub Actions zůstávají nezměněné** 